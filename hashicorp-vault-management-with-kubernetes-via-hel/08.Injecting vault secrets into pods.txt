#Injecting vault secrets into pods
#Install Vault in minikube k8s cluster under vault namespace 
helm repo add hashicorp https://helm.releases.hashicorp.com
helm repo list
helm repo update
helm search repo vault --versions
kubectl create ns vault
helm install vault hashicorp/vault --set='ui.enabled=true' --set='ui.serviceType=LoadBalancer' -n vault
You Can access Vault using > LB_IP:8200 > http://192.168.49.5:8200


#Configure K8s Auth, Service Account and Policies.
1. Create a KV Secret in internal path and add database username/password secret
kubectl -n vault exec -it vault-0 /bin/sh
vault login
vault secrets enable -path=internal kv-v2
vault kv put internal/database/config username="karim" password="123"

2. Enable K8s Auth
vault auth enable kubernetes
vault write auth/kubernetes/config kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443"

3. Create SVC Account Policy
Create the following policy called "internal-app" though GUI
path "internal/data/database/config" {
capabilities = ["read"]  
}

kubectl create sa internal-app


#Deploy App and fetch secrets from vault.
1. Bind K8s SA (internal-app) with K8s Auth Config.
Access Vault GUI > Access > Kubernetes > Create a new Role called "internal-app" > "Bound service account names" = internal-app, "Bound service account namespaces" = default, "Generated Token's Policies" = internal-app > Save

2. Deploy Pod and annotate it with patch
kubectl apply -f deployment.yaml
kubectl patch deployment orgchart --patch "$(cat patch.yaml)"